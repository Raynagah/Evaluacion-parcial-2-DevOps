name: CI de Node.js con Docker

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout del código
      uses: actions/checkout@v4

    - name: Configurar Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Instalar dependencias
      run: npm install

    # --- INICIO DE LA CORRECCIÓN FINAL ---
    - name: Ejecutar Tests con Karma
      # Usamos npx para llamar a Karma directamente y asegurar que lea el archivo de configuración.
      run: npx karma start karma.conf.js --single-run
    # --- FIN DE LA CORRECCIÓN FINAL ---

    - name: Revisar código con ESLint
      run: npx eslint . --ext .js,.jsx,.ts,.tsx

    - name: Analizar dependencias con Snyk
      uses: snyk/actions/node@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        args: --sarif-file-output=snyk.sarif

    - name: Subir resultados de Snyk
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: snyk.sarif

    - name: Análisis de código con SonarCloud
      uses: SonarSource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      with:
        args: >
          -Dsonar.organization=tu-organizacion-en-sonarcloud
          -Dsonar.projectKey=tu-clave-de-proyecto-en-sonarcloud

    - name: Iniciar sesión en Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Construir y subir imagen a Docker Hub
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: raynagah/evaluacion-parcial:latest
